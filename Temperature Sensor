

/*
 * Mical Humphrey
 * Temperature sensing Arduino hardware. Applications in Food service: Sense when a product at the 
 * right temperature to predict food spoilage. This way we can more easily automate the restocking of products
 * Variation on code made based on"Love-O-Meter" Project I loved in Arduino.cc Projects Book.
 */
  
   const int sensorPin = A0;
   const float baselineTemp = 21.0;

void setup() {

  Serial.begin(9600); //This opens the serial port

  for (int pinNumber=2; pinNumber<5; pinNumber++)
  {
    pinMode(pinNumber, OUTPUT);
    digitalWrite(pinNumber, LOW);
  }
}

void loop() {

  int sensorVal = analogRead(sensorPin);
  Serial.print("Sensor Value: ");
  Serial.print(sensorVal);

  float voltage = (sensorVal / 1024.0) * 5.0;
  Serial.print(", Volts: ");
  Serial.print(voltage);
  Serial.print(", degrees C: ");

  //Convert volts to temperature in degrees
  float temperature = (voltage - 0.5) * 100;
  Serial.println(temperature);

  if (temperature < baselineTemp+2)
  {
    digitalWrite(4, LOW);
    digitalWrite(3, LOW);
    digitalWrite(2, LOW);
  }

  else if (temperature >= baselineTemp + 2 && temperature < baselineTemp + 4)
  {
    digitalWrite(4, HIGH);
    digitalWrite(3, LOW);
    digitalWrite(2, LOW);
  }

  else if (temperature >= baselineTemp +4 && temperature < baselineTemp+6)
  {
    digitalWrite(4, HIGH);
    digitalWrite(3, HIGH);
    digitalWrite(2, LOW);
  }

  else if(temperature >= baselineTemp+6)
  {
    digitalWrite(4, HIGH);
    digitalWrite(3, HIGH);
    digitalWrite(2, HIGH);
  }

  delay(1);
}
